[
  {
    "id" : "3c9a3b23-d5a4-4255-ac22-3aef08e76829",
    "prId" : 389,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/389#pullrequestreview-440203605",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "60fc0679-b5a5-4746-af29-f5ceb779abee",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Sorry @mkondratek if/that I suggested to remove that before - as a rule of the thumb, any method in any class that's invoked from any of this class's c'tors should be marked as `@UnknownInitialization ... this`",
        "createdAt" : "2020-06-30T16:46:41Z",
        "updatedAt" : "2020-06-30T16:46:41Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "8158d1fd9e2340d906d887ae00f10fd59b4d95a9",
    "line" : 7,
    "diffHunk" : "@@ -1,1 +214,218 @@class DialogWrapper {\n  // `this` in the below method is @UnknownInitialization since this methods is called from DialogWrapper's c'tor\n  @Nullable javax.swing.JRootPane getRootPane(@UnknownInitialization DialogWrapper this);\n}\n"
  },
  {
    "id" : "22baf5c2-f95f-4693-8a00-29f5f2b62a96",
    "prId" : 214,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/214#pullrequestreview-400382594",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3f55e3c2-dc95-47c8-807d-bf9344c0ad70",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Good spot, the runnable should be `@UI` here indeed!",
        "createdAt" : "2020-04-25T10:55:25Z",
        "updatedAt" : "2020-04-28T17:07:12Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d84fce99082ed90b6935e139e1e51e37e777069",
    "line" : 6,
    "diffHunk" : "@@ -1,1 +237,241 @@\nclass GuiUtils {\n  @SafeEffect void invokeLaterIfNeeded(@UI Runnable runnable, ModalityState modalityState);\n  @SafeEffect void invokeLaterIfNeeded(@UI Runnable runnable, ModalityState modalityState, Condition expired);\n}"
  },
  {
    "id" : "3cb7a65e-df68-4496-aa34-e6f1515d0aa4",
    "prId" : 200,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/200#pullrequestreview-394906119",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc113cb2-0d1d-4276-ab42-b62899f437c9",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Or at least so does `Application#isDispatchThread` say when I checked for our actions ;)",
        "createdAt" : "2020-04-16T18:44:50Z",
        "updatedAt" : "2020-04-21T20:50:16Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "072efa27ef08938f11c5075d923f7438ea93763d",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +78,82 @@  @SafeEffect AnAction();\n  // We can safely mark `actionPerformed` and `update` as `@UIEffect` (the default given we're in a `@UIPackage`)\n  // since they are indeed invoked on the dispatch thread.\n}\n"
  },
  {
    "id" : "bc3c54f3-903b-4cd1-a203-a66b3e378311",
    "prId" : 194,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/194#pullrequestreview-396627392",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d133448e-18c5-43f1-bc68-9a48e782ae3b",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Nit: move c'tor before an instance method",
        "createdAt" : "2020-04-20T16:40:50Z",
        "updatedAt" : "2020-04-21T18:41:10Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "1ab529e3b7789221ec1c229eb7273250720a5016",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +322,326 @@\nclass GraphEdge {\n    GraphEdge(@NonNegative Integer upNodeIndex, @NonNegative Integer downNodeIndex, @Nullable Integer targetId, GraphEdgeType type);\n    GraphEdge createNormalEdge(@NonNegative int nodeIndex1, @NonNegative int nodeIndex2, GraphEdgeType type);\n}"
  }
]