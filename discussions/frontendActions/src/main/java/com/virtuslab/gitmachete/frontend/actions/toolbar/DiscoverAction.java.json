[
  {
    "id" : "bf38bf63-41da-4258-9b63-05a94c33763d",
    "prId" : 698,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/698#pullrequestreview-583284693",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "87cbea70-a92f-4147-be26-4722a21bfb88",
        "parentId" : null,
        "authorId" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "body" : "> Nit: hmm can this be moved into `Task`'s own `onFailure`/`onSuccess`? Then probably `GuiUtils.invokeLaterIfNeeded` in `openMacheteFile` won't be even needed since IIRC both these `Task`'s callbacks are executed on UI thread; `openMacheteFile` can be `@UIEffect` and `postWriteRunnable` can be `@UI`\r\n~ @PawelLipski \r\n\r\nI tried it before but splitting the code into `onThrowable` and `onSuccess` has not resolved the issue.\r\nHowever, I managed to do that now. Actually, for some reason, a refresh of VFS before opening the machete file is required when `write` and `postWriteRunnable` (open) are split between the methods.\r\n\r\nWorks fine to me but I would appreciate it if someone else could verify it too.",
        "createdAt" : "2021-02-04T09:49:28Z",
        "updatedAt" : "2021-02-24T13:14:33Z",
        "lastEditedBy" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "tags" : [
        ]
      },
      {
        "id" : "e61d3b32-f54f-4471-a552-2dbd2925ab8a",
        "parentId" : "87cbea70-a92f-4147-be26-4722a21bfb88",
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Whoops actually... does this `markDirtyAndRefresh` thing also **reparse** the files, or only syncs them with the disk? Coz I don't want the issues like https://github.com/VirtusLab/git-machete-intellij-plugin/issues/679 to recur ðŸ˜± ",
        "createdAt" : "2021-02-04T10:34:37Z",
        "updatedAt" : "2021-02-24T13:14:33Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      },
      {
        "id" : "b4bf5c51-e19c-4b87-afee-976c6fd6714e",
        "parentId" : "87cbea70-a92f-4147-be26-4722a21bfb88",
        "authorId" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "body" : "checked, `markDirtyAndRefresh` does no call `FileContentUtilCore#reparseFiles`",
        "createdAt" : "2021-02-04T11:16:09Z",
        "updatedAt" : "2021-02-24T13:14:33Z",
        "lastEditedBy" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a42dce7dead34fdc622ee88ffe7fa615ecb7d6f",
    "line" : 116,
    "diffHunk" : "@@ -1,1 +133,137 @@      public void onSuccess() {\n        baseEnhancedGraphTable.queueRepositoryUpdateAndModelRefresh();\n        VfsUtil.markDirtyAndRefresh(/* async */ false, /* recursive */ true, /* reloadChildren */ false,\n            ProjectRootManager.getInstance(project).getContentRoots());\n        postWriteRunnable.run();"
  },
  {
    "id" : "a68088df-7447-49f8-9409-1a017146fc68",
    "prId" : 698,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/698#pullrequestreview-583273607",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c7b3f899-a240-4ffa-bcd8-84f9e86d175f",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Whoops... does it compile successfully? Coz it's running `@UI Runnable` (a Runnable that can only be executed on UI thread)  on a method that's not explicitly marked as `@UIEffect`... although it could be marked as such",
        "createdAt" : "2021-02-04T10:36:06Z",
        "updatedAt" : "2021-02-24T13:14:33Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      },
      {
        "id" : "cc31c5a6-daa4-4628-8015-ec73234b8034",
        "parentId" : "c7b3f899-a240-4ffa-bcd8-84f9e86d175f",
        "authorId" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "body" : "> IIRC both these Task's callbacks are executed on UI thread;\r\n\r\nI thought that this is why it works",
        "createdAt" : "2021-02-04T10:55:20Z",
        "updatedAt" : "2021-02-24T13:14:33Z",
        "lastEditedBy" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "tags" : [
        ]
      },
      {
        "id" : "b1c2f777-7b27-404a-a54b-9c071e5e3198",
        "parentId" : "c7b3f899-a240-4ffa-bcd8-84f9e86d175f",
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Hmmm possibly GuiEffectChecker takes into account `@UIEffect` annotations on base `Task` methods in `com.intellij.astub`... still, doesn't harm to mark both `onSuccess` and `onThrowable` as `@UIEffect` for clarity",
        "createdAt" : "2021-02-04T11:02:07Z",
        "updatedAt" : "2021-02-24T13:14:33Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a42dce7dead34fdc622ee88ffe7fa615ecb7d6f",
    "line" : 118,
    "diffHunk" : "@@ -1,1 +135,139 @@        VfsUtil.markDirtyAndRefresh(/* async */ false, /* recursive */ true, /* reloadChildren */ false,\n            ProjectRootManager.getInstance(project).getContentRoots());\n        postWriteRunnable.run();\n      }\n"
  },
  {
    "id" : "31e9754b-6be0-48a8-947b-6fe4f86b1d68",
    "prId" : 698,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/698#pullrequestreview-583310891",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "09358ec3-981e-4003-b2be-f0fd3b7443a1",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Nit: `Objects.requireNonNullElse`",
        "createdAt" : "2021-02-04T11:49:30Z",
        "updatedAt" : "2021-02-24T13:14:33Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "6a42dce7dead34fdc622ee88ffe7fa615ecb7d6f",
    "line" : 126,
    "diffHunk" : "@@ -1,1 +143,147 @@        VcsNotifier.getInstance(project).notifyError(\n            /* title */ getString(\"action.GitMachete.DiscoverAction.notification.title.write-file-error\"),\n            /* message */ e.getMessage() != null ? e.getMessage() : \"\");\n      }\n"
  }
]