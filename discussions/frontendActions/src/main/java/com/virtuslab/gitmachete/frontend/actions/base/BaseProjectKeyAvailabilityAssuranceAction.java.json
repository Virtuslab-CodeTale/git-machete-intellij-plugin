[
  {
    "id" : "77627510-071f-4804-833e-6ad3fb612cba",
    "prId" : 484,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/484#pullrequestreview-464091518",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0a53f22a-0d0c-4aae-9d2a-75a7eebb6ba5",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Pls update scripts/enforce-call-super-for-overridden-onupdate",
        "createdAt" : "2020-08-10T09:48:53Z",
        "updatedAt" : "2020-08-12T11:52:42Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "996462c2aa1cfa6816d0463081ca92547a4ed30d",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +25,29 @@\n  /**\n   * If overridden {@code super.onUpdate(anActionEvent);} should always be called in the first line of overriding method.\n   *\n   * @param anActionEvent an action event"
  },
  {
    "id" : "253bda5f-a698-450f-9523-7d601f5d6e6d",
    "prId" : 412,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/412#pullrequestreview-444924963",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f87efb97-2799-4301-8d1e-4d7f4341aaa0",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Hmmm actually... do currently we have any action that would NOT implement `IExpectsKeyProject`? Possibly we could make `BaseProjectKeyAvailabilityAssuranceAction` implement `IExpectsKeyProject`?",
        "createdAt" : "2020-07-07T20:49:31Z",
        "updatedAt" : "2020-07-16T15:29:37Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      },
      {
        "id" : "cadb86e1-6844-4cc6-9d38-94ba66c91477",
        "parentId" : "f87efb97-2799-4301-8d1e-4d7f4341aaa0",
        "authorId" : "48423025-6a70-4a33-a28c-13ad330a38e0",
        "body" : "Probably all actions would implement `IExpectsKeyProject` but it is unnecessary and IMO it's distinction is more clear.",
        "createdAt" : "2020-07-08T16:16:21Z",
        "updatedAt" : "2020-07-16T15:29:37Z",
        "lastEditedBy" : "48423025-6a70-4a33-a28c-13ad330a38e0",
        "tags" : [
        ]
      }
    ],
    "commit" : "79b6a241c6b421e85fcefc7a090f1eb10d472baf",
    "line" : 15,
    "diffHunk" : "@@ -1,1 +13,17 @@    super.update(anActionEvent);\n\n    if (this instanceof IExpectsKeyProject) {\n      IExpectsKeyProject thisAction = (IExpectsKeyProject) this;\n      var projectOption = thisAction.tryGetProject(anActionEvent);"
  },
  {
    "id" : "d861d705-1e1e-4233-a4d4-df323ca82486",
    "prId" : 412,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/412#pullrequestreview-445009519",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "801807fd-c9eb-48ca-8cbf-f9356756d42c",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Actually, to reduce the risk of someone forgetting to call `super.onUpdate`, I'd define `onUpdate` in `BaseGitMacheteRepositoryReadyAction` instead, and mark `update` as final there. This way nobody will need to remember to call `super.onUpdate` since it's gonna be always called from `BaseGitMacheteRepositoryReadyAction#update`.",
        "createdAt" : "2020-07-08T17:03:37Z",
        "updatedAt" : "2020-07-16T15:29:37Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      },
      {
        "id" : "d539673b-ff73-48a4-8de7-cfd8b4782616",
        "parentId" : "801807fd-c9eb-48ca-8cbf-f9356756d42c",
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "The only problem will be then that classes that extend `BaseProjectKeyAvailabilityAssuranceAction` but not `BaseGitMacheteRepositoryReadyAction`... but IIRC there's currently just one (?) such class anyway, so we can call `super.update` explicitly from that class.",
        "createdAt" : "2020-07-08T17:04:58Z",
        "updatedAt" : "2020-07-16T15:29:37Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      },
      {
        "id" : "39ddb7dd-d9a3-4fcb-9fcd-6f721d5a73d4",
        "parentId" : "801807fd-c9eb-48ca-8cbf-f9356756d42c",
        "authorId" : "48423025-6a70-4a33-a28c-13ad330a38e0",
        "body" : "Ok, but what about actions that are not `BaseGitMacheteRepositoryReadyAction`? What about `BaseProjectKeyAvailabilityAssuranceAction`? Should only `update` method be there and then actions that derived from `BaseProjectKeyAvailabilityAssuranceAction` should `@Override` `update` method and call `super#update`?",
        "createdAt" : "2020-07-08T17:27:06Z",
        "updatedAt" : "2020-07-16T15:29:37Z",
        "lastEditedBy" : "48423025-6a70-4a33-a28c-13ad330a38e0",
        "tags" : [
        ]
      },
      {
        "id" : "581a05d6-6983-4ae5-9920-94b49e9bdb5a",
        "parentId" : "801807fd-c9eb-48ca-8cbf-f9356756d42c",
        "authorId" : "48423025-6a70-4a33-a28c-13ad330a38e0",
        "body" : "As agreed via Slack we leave this as is for consistency: in every action we override `onUpdate` method and call `super#onUpdate`",
        "createdAt" : "2020-07-08T18:04:47Z",
        "updatedAt" : "2020-07-16T15:29:37Z",
        "lastEditedBy" : "48423025-6a70-4a33-a28c-13ad330a38e0",
        "tags" : [
        ]
      },
      {
        "id" : "80433829-0df3-458e-8b37-e96aa6d5baa3",
        "parentId" : "801807fd-c9eb-48ca-8cbf-f9356756d42c",
        "authorId" : "48423025-6a70-4a33-a28c-13ad330a38e0",
        "body" : "plus grep check for call `super`",
        "createdAt" : "2020-07-08T18:05:06Z",
        "updatedAt" : "2020-07-16T15:29:37Z",
        "lastEditedBy" : "48423025-6a70-4a33-a28c-13ad330a38e0",
        "tags" : [
        ]
      }
    ],
    "commit" : "79b6a241c6b421e85fcefc7a090f1eb10d472baf",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +25,29 @@\n  @UIEffect\n  protected abstract void onUpdate(AnActionEvent anActionEvent);\n}"
  }
]