[
  {
    "id" : "7a42c853-bb33-435b-804c-3364c8763f7b",
    "prId" : 300,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/300#pullrequestreview-415720710",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3c18d7f6-bdbc-4be0-98f8-9eb4a244cb90",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "```java\r\n\t/**\r\n\t * Include {@link RevFlag#UNINTERESTING} boundary commits after all others.\r\n\t * In {@link ObjectWalk}, objects associated with such commits (trees,\r\n\t * blobs), and all other objects marked explicitly as UNINTERESTING are also\r\n\t * included.\r\n\t * <p>\r\n\t * A boundary commit is a UNINTERESTING parent of an interesting commit that\r\n\t * was previously output.\r\n\t */\r\n\tBOUNDARY;\r\n```",
        "createdAt" : "2020-05-20T21:17:27Z",
        "updatedAt" : "2020-06-10T07:53:10Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d7b18b2b2b8fb49e62d59102fe84155380f8770",
    "line" : 18,
    "diffHunk" : "@@ -1,1 +77,81 @@    @Unique RevWalk walk = getTopoRevWalkFromPointedCommit();\n    try {\n      walk.markUninteresting(walk.parseCommit(repo.gitCoreCommitToObjectId(upToCommit)));\n    } catch (IOException e) {\n      throw new GitCoreException(e);"
  },
  {
    "id" : "04a2c4a0-d66f-470e-a03a-3b64fd163e6b",
    "prId" : 300,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/300#pullrequestreview-424280640",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "3a8ca240-c747-49b2-b944-82fce69a9596",
        "parentId" : null,
        "authorId" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "body" : "string interpolations here?",
        "createdAt" : "2020-06-04T08:12:35Z",
        "updatedAt" : "2020-06-10T07:53:10Z",
        "lastEditedBy" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "tags" : [
        ]
      },
      {
        "id" : "b90a8dd8-f667-46e1-acb4-9353b012c10f",
        "parentId" : "3a8ca240-c747-49b2-b944-82fce69a9596",
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "IMO more readable without here :) string interpolations IMO make less sense when there's just one value to be interpolated at the beginning or end of a short string",
        "createdAt" : "2020-06-04T09:49:25Z",
        "updatedAt" : "2020-06-10T07:53:10Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "0d7b18b2b2b8fb49e62d59102fe84155380f8770",
    "line" : 30,
    "diffHunk" : "@@ -1,1 +87,91 @@        .takeUntil(revCommit -> revCommit.getId().getName().equals(upToCommit.getHash().getHashString()))\n        .map(revCommit -> {\n          LOG.debug(() -> \"* \" + revCommit.getId().getName());\n          return revCommit;\n        })"
  }
]