[
  {
    "id" : "87ea791f-6ab3-46d1-b058-19db121b4089",
    "prId" : 55,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/55#pullrequestreview-356685685",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ce62a1e4-aa07-4a29-b1d5-484a3c79c67d",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Not sure which approach is better... FYI, I did it slightly differently on PR to git-machete (remove all entries that have SHA equal to SHA of any entry excluded by its reflog subject, not just SHA equal to that of first entry ever). But possibly it's an overkill on my part. Maybe just leave a `// Note:` on that with a link to https://github.com/VirtusLab/git-machete/pull/73",
        "createdAt" : "2020-02-11T11:51:41Z",
        "updatedAt" : "2020-02-11T17:10:49Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      },
      {
        "id" : "acec2cff-a37b-47ab-a008-109d6d124552",
        "parentId" : "ce62a1e4-aa07-4a29-b1d5-484a3c79c67d",
        "authorId" : "48423025-6a70-4a33-a28c-13ad330a38e0",
        "body" : "I'm not sure if I understand what exactly you do in git-machete but I think I do similar things: exclude all entries that have new hash equal to first commit in reflog, old hash equal to new or comment of this entry starts with `branch: Reset to` or `reset: moving to`",
        "createdAt" : "2020-02-11T12:34:50Z",
        "updatedAt" : "2020-02-11T17:10:49Z",
        "lastEditedBy" : "48423025-6a70-4a33-a28c-13ad330a38e0",
        "tags" : [
        ]
      },
      {
        "id" : "11b083b5-f1d7-458c-a17c-26edca5d7f06",
        "parentId" : "ce62a1e4-aa07-4a29-b1d5-484a3c79c67d",
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "So in case of git-machete CLI that would be: \"exclude all the entries X whose comment starts with `branch: Reset to` or `reset: moving to`, and **any entries that have the same newId as any entry of X**\"",
        "createdAt" : "2020-02-11T14:11:39Z",
        "updatedAt" : "2020-02-11T17:10:49Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "baea1818b30e77f09b373beadf9ebcbc99d2c54b",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +108,112 @@    // See: https://github.com/VirtusLab/git-machete/pull/73\n    for (var entries : reflogEntriesList) {\n      var firstEntryNewID =\n          entries.size() > 0 ? entries.get(entries.size() - 1).getNewId() : ObjectId.zeroId();\n      entries.removeIf("
  },
  {
    "id" : "b38238db-314e-42d7-81d5-2d9f8b3adf33",
    "prId" : 29,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/29#pullrequestreview-339373012",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4a547f16-834b-44cb-8548-c24eb96ec73f",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Nit: possibly those `try ... catch`es could be extracted to outermost level & merged into a single `try ... catch`",
        "createdAt" : "2020-01-07T17:01:40Z",
        "updatedAt" : "2020-01-07T17:01:41Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "178d99ce3343e8e1d2e432bb72c5a0893df6df01",
    "line" : 50,
    "diffHunk" : "@@ -1,1 +72,76 @@    walk.sort(RevSort.TOPO);\n    RevCommit commit = getPointedRevCommit();\n    try {\n      walk.markStart(commit);\n    } catch (Exception e) {"
  }
]