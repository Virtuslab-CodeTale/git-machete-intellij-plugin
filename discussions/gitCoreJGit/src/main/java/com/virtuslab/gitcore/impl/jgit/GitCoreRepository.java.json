[
  {
    "id" : "6faad664-e4f7-4819-8505-ab95c68c69f5",
    "prId" : 414,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/414#pullrequestreview-443297024",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "eaf161cc-b9e1-425a-b275-af2bb80d894d",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Nit: maybe spotless formatting can be somehow turned off for a code region... it'd feel much better if it was consistently sth like\r\n```java\r\n        Case($(isIn(...)),\r\n            ...),\r\n```",
        "createdAt" : "2020-07-06T18:02:12Z",
        "updatedAt" : "2020-07-16T19:51:32Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba277eca62e16c84abb61335ed3a7cddfb006c53",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +410,414 @@  @Override\n  public GitCoreRepositoryState deriveRepositoryState() {\n    return Match(jgitRepo.getRepositoryState()).of(\n    // @formatter:off\n        Case($(isIn(RepositoryState.CHERRY_PICKING, RepositoryState.CHERRY_PICKING_RESOLVED)),"
  },
  {
    "id" : "4d197440-2067-4a29-a728-535325a7d209",
    "prId" : 414,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/414#pullrequestreview-443320434",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ff11cd51-709e-40cd-b4ce-c686331fa769",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Hmm a case for `APPLY` and `BISECTING` is missing (TBH git-machete CLI handles the former but not the latter)",
        "createdAt" : "2020-07-06T18:38:56Z",
        "updatedAt" : "2020-07-16T19:51:32Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "ba277eca62e16c84abb61335ed3a7cddfb006c53",
    "line" : 97,
    "diffHunk" : "@@ -1,1 +424,428 @@        Case($(RepositoryState.BISECTING),\n            GitCoreRepositoryState.BISECTING),\n        Case($(), GitCoreRepositoryState.NORMAL));\n    // @formatter:on\n  }"
  },
  {
    "id" : "8078cff0-c4b9-4217-b194-ae661efdda15",
    "prId" : 352,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/352#pullrequestreview-439048110",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7fbe2022-ace3-4c4c-b69c-4ad6c398e24b",
        "parentId" : null,
        "authorId" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "body" : "For me (only on the cards) it is not necessary. Ofc we gain precision but for methods like `find`, `filter`, `count`, etc that take some predicate as an argument it seems to be clear that we are interested in element(s) satisfying the predicate.\r\n\r\nAs an example: https://www.javadoc.io/doc/io.vavr/vavr/0.9.0/io/vavr/collection/Traversable.html#find-java.util.function.Predicate-",
        "createdAt" : "2020-06-29T07:59:34Z",
        "updatedAt" : "2020-07-01T13:19:35Z",
        "lastEditedBy" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "tags" : [
        ]
      },
      {
        "id" : "ede22ca9-3df0-49b3-afd1-62b0603c6bd4",
        "parentId" : "7fbe2022-ace3-4c4c-b69c-4ad6c398e24b",
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "This (kinda too bespoke/opinionated) method is replaced with a regular `Stream`/`filter` on #373 anyway, leaving here as is",
        "createdAt" : "2020-06-29T11:32:36Z",
        "updatedAt" : "2020-07-01T13:19:35Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "c0831dd609736b3330678c22c5b18b43d9ed82b7",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +418,422 @@  @Override\n  @SuppressWarnings(\"aliasing:enhancedfor.type.incompatible\")\n  public Option<IGitCoreCommit> findFirstSatisfyingAncestor(\n      IGitCoreCommit fromInclusive,\n      Predicate<IGitCoreCommitHash> predicate) throws GitCoreException {"
  },
  {
    "id" : "f1ae8df4-8f56-4a68-b85d-6a36dd494ca5",
    "prId" : 329,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/329#pullrequestreview-424889625",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "577a2d59-f00e-4402-a10e-ea1c458da3a7",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "`peek` on Java Stream, frowned upon but allowed",
        "createdAt" : "2020-06-04T22:56:06Z",
        "updatedAt" : "2020-06-24T08:40:45Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "1408db41b2dbe0b5d0f84e3fe823c7bdffbafb1c",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +410,414 @@          .toJavaStream()\n          .takeWhile(revCommit -> !revCommit.getId().getName().equals(untilExclusive.getHash().getHashString()))\n          .peek(revCommit -> LOG.debug(() -> \"* \" + revCommit.getId().getName()))\n          .map(GitCoreCommit::new)\n          .collect(List.collector());"
  },
  {
    "id" : "0cbbe89c-aca1-4f33-8b8c-f27a4ac960ac",
    "prId" : 313,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/313#pullrequestreview-426898647",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "9f3ae220-d1d5-49d4-8471-9e21453c6b43",
        "parentId" : null,
        "authorId" : "48423025-6a70-4a33-a28c-13ad330a38e0",
        "body" : "Vavr.Try ?",
        "createdAt" : "2020-06-09T09:10:51Z",
        "updatedAt" : "2020-06-10T07:54:15Z",
        "lastEditedBy" : "48423025-6a70-4a33-a28c-13ad330a38e0",
        "tags" : [
        ]
      }
    ],
    "commit" : "def93bbe8a38227829d8b77ea3d836bc785c3427",
    "line" : 63,
    "diffHunk" : "@@ -1,1 +115,119 @@    try {\n      return Option.of(jgitRepo.resolve(revision));\n    } catch (IOException e) {\n      throw new GitCoreException(e);\n    }"
  },
  {
    "id" : "f6ed0037-09ec-4989-812f-d313127d18bd",
    "prId" : 303,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/303#pullrequestreview-432193727",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e0f44ad3-c989-4730-9d56-bcec83c14288",
        "parentId" : null,
        "authorId" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "body" : "The declared exception is never thrown",
        "createdAt" : "2020-06-16T11:51:00Z",
        "updatedAt" : "2020-06-16T13:52:35Z",
        "lastEditedBy" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "tags" : [
        ]
      },
      {
        "id" : "744856e4-d292-4f86-9cdb-f25e20b25903",
        "parentId" : "e0f44ad3-c989-4730-9d56-bcec83c14288",
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "It might be thrown by `Try#get` :/ but PR #329 fixes this logic here a bit anyway so I won't change it on this PR",
        "createdAt" : "2020-06-17T08:52:58Z",
        "updatedAt" : "2020-06-17T08:52:59Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "abcbc1a644193060030e2d218195b948e1a696e7",
    "line" : 156,
    "diffHunk" : "@@ -1,1 +147,151 @@  }\n\n  private Option<GitCoreRemoteBranch> deriveRemoteBranch(String localBranchShortName) throws GitCoreException {\n    return deriveRemoteName(localBranchShortName)\n        .flatMap(remoteName -> deriveRemoteBranchName(localBranchShortName)"
  },
  {
    "id" : "83ae3e98-ad6e-44ca-ba08-7165bbc7f0ec",
    "prId" : 303,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/303#pullrequestreview-431423870",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20ee1cfb-51ee-4148-8393-fed4b8311c70",
        "parentId" : null,
        "authorId" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "body" : "awesome! :rocket: ",
        "createdAt" : "2020-06-16T12:01:17Z",
        "updatedAt" : "2020-06-16T13:52:35Z",
        "lastEditedBy" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "tags" : [
        ]
      }
    ],
    "commit" : "abcbc1a644193060030e2d218195b948e1a696e7",
    "line" : 192,
    "diffHunk" : "@@ -1,1 +163,167 @@\n  @SuppressWarnings(\"IllegalCatch\")\n  <T> T withRevWalk(CheckedFunction1<RevWalk, T> fun) throws GitCoreException {\n    try (RevWalk walk = new RevWalk(jgitRepo)) {\n      return fun.apply(walk);"
  },
  {
    "id" : "b181158d-d257-4e27-b28f-7ffd8f7f7861",
    "prId" : 303,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/303#pullrequestreview-432196436",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "dc27b0ef-9cad-48f5-a78d-1d0962b13647",
        "parentId" : null,
        "authorId" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "body" : "We use this field only within logs. Are we sure that we want to keep it? We could depend on git directory path only, could not we?",
        "createdAt" : "2020-06-16T12:25:10Z",
        "updatedAt" : "2020-06-16T13:52:35Z",
        "lastEditedBy" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "tags" : [
        ]
      },
      {
        "id" : "474964c7-1ee0-4a7f-ab54-d76f59b3c1b7",
        "parentId" : "dc27b0ef-9cad-48f5-a78d-1d0962b13647",
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "This area is changed on one of downstream PRs to:\r\n\r\n![image](https://user-images.githubusercontent.com/3383210/84877660-135b9a80-b089-11ea-9e2a-a9679ce92cd0.png)\r\n\r\nso the field is retained for the sake of `toString` (i.e. for logs), but a getter is no longer exposed",
        "createdAt" : "2020-06-17T08:56:15Z",
        "updatedAt" : "2020-06-17T08:56:15Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "abcbc1a644193060030e2d218195b948e1a696e7",
    "line" : 52,
    "diffHunk" : "@@ -1,1 +42,46 @@  private final Repository jgitRepo;\n  @Getter\n  private final Path mainDirectoryPath;\n  private final Path gitDirectoryPath;\n"
  },
  {
    "id" : "a0848921-e95f-4848-8a55-f8961149c194",
    "prId" : 303,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/303#pullrequestreview-432197120",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d9936c0f-49d5-4423-a696-aad9bb91d0e9",
        "parentId" : null,
        "authorId" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "body" : "maybe inline var?",
        "createdAt" : "2020-06-16T13:44:41Z",
        "updatedAt" : "2020-06-16T13:52:35Z",
        "lastEditedBy" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "tags" : [
        ]
      },
      {
        "id" : "21577ae0-fb39-43fd-9d27-7fd1b0c4e938",
        "parentId" : "d9936c0f-49d5-4423-a696-aad9bb91d0e9",
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Ok, I'll change on one of downstream PRs",
        "createdAt" : "2020-06-17T08:57:02Z",
        "updatedAt" : "2020-06-17T08:57:03Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "abcbc1a644193060030e2d218195b948e1a696e7",
    "line" : 289,
    "diffHunk" : "@@ -1,1 +250,254 @@      LOG.debug(() -> \"Detected merge base for ${c1.getHash().getHashString()} \" +\n          \"and ${c2.getHash().getHashString()} is ${mergeBase.toString()}\");\n      GitCoreCommitHash mergeBaseHash = mergeBase != null ? new GitCoreCommitHash(mergeBase.getId().getName()) : null;\n      return Option.of(mergeBaseHash);\n    });"
  },
  {
    "id" : "d2f8021b-aff7-4b00-9cc9-8872f134a1bb",
    "prId" : 290,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/290#pullrequestreview-415521860",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "acdadb93-d57e-4930-90f7-f503c8954da8",
        "parentId" : null,
        "authorId" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "body" : ":heart: ",
        "createdAt" : "2020-05-20T16:40:44Z",
        "updatedAt" : "2020-06-04T22:58:10Z",
        "lastEditedBy" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "tags" : [
        ]
      }
    ],
    "commit" : "dd5c401baf24df6c5c328a7a0e2db9ac5d17b152",
    "line" : 44,
    "diffHunk" : "@@ -1,1 +144,148 @@  @Override\n  public List<IGitCoreRemoteBranch> getAllRemoteBranches() throws GitCoreException {\n    return Try.traverse(getRemotes(), this::getRemoteBranchesTry)\n        .getOrElseThrow(GitCoreException::castOrWrap)\n        .flatMap(Function.identity())"
  },
  {
    "id" : "dcfe8596-e119-4d19-8a96-e5b7fc26f0ab",
    "prId" : 259,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/259#pullrequestreview-407737162",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2e8cfe7-bafd-4d07-8b85-ede79bd2feed",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Yeah, this should likely be private",
        "createdAt" : "2020-05-07T08:25:10Z",
        "updatedAt" : "2020-05-08T15:38:58Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      },
      {
        "id" : "06ccd96c-15ae-4705-9aeb-551d601850b5",
        "parentId" : "e2e8cfe7-bafd-4d07-8b85-ede79bd2feed",
        "authorId" : "48423025-6a70-4a33-a28c-13ad330a38e0",
        "body" : "> this should likely be private\r\n\r\nDitto, why?",
        "createdAt" : "2020-05-07T14:38:52Z",
        "updatedAt" : "2020-05-08T15:38:58Z",
        "lastEditedBy" : "48423025-6a70-4a33-a28c-13ad330a38e0",
        "tags" : [
        ]
      },
      {
        "id" : "1ac2e872-a510-4c29-bbce-7214b0f56a65",
        "parentId" : "e2e8cfe7-bafd-4d07-8b85-ede79bd2feed",
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "No longer relevant, pls leave as is",
        "createdAt" : "2020-05-07T18:39:13Z",
        "updatedAt" : "2020-05-08T15:38:58Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "39d3185cdb151a1b82c41539dd05bd4c14a42181",
    "line" : 39,
    "diffHunk" : "@@ -1,1 +83,87 @@\n  @Override\n  public Option<IGitCoreRemoteBranch> getRemoteBranch(String branchName, String remoteName) throws GitCoreException {\n    if (isBranchMissing(GitCoreRemoteBranch.BRANCHES_PATH + remoteName + \"/\" + branchName)) {\n      return Option.none();"
  },
  {
    "id" : "b1b7e27d-2e06-4c1c-a3b9-e636bd09f803",
    "prId" : 214,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/214#pullrequestreview-399455520",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "422b7617-92e3-4874-ae08-53fc3ec5975c",
        "parentId" : null,
        "authorId" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "body" : "This asterisk is to make branches look like they were on a pointed list, right?",
        "createdAt" : "2020-04-23T20:31:28Z",
        "updatedAt" : "2020-04-28T17:07:12Z",
        "lastEditedBy" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "tags" : [
        ]
      },
      {
        "id" : "371edb98-b327-4736-8073-deec740528d8",
        "parentId" : "422b7617-92e3-4874-ae08-53fc3ec5975c",
        "authorId" : "48423025-6a70-4a33-a28c-13ad330a38e0",
        "body" : "yes",
        "createdAt" : "2020-04-23T20:34:57Z",
        "updatedAt" : "2020-04-28T17:07:12Z",
        "lastEditedBy" : "48423025-6a70-4a33-a28c-13ad330a38e0",
        "tags" : [
        ]
      }
    ],
    "commit" : "6d84fce99082ed90b6935e139e1e51e37e777069",
    "line" : 68,
    "diffHunk" : "@@ -1,1 +111,115 @@        .filter(branch -> !branch.getName().equals(Constants.HEAD))\n        .map(branch -> {\n          LOG.debug(() -> \"* ${branch.getName()}\");\n          return branch;\n        })"
  },
  {
    "id" : "33f237c2-f9a2-4fe1-91b3-36cf8e7e7eeb",
    "prId" : 203,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/203#pullrequestreview-395751030",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8e9ce7bc-72df-4f38-9c21-180b13d79e90",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Piggybacking an unrelated optimization here",
        "createdAt" : "2020-04-17T20:26:01Z",
        "updatedAt" : "2020-04-21T20:49:47Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff79d8b3ffb89e418e22feedea0a4d042874a9a7",
    "line" : 5,
    "diffHunk" : "@@ -1,1 +198,202 @@      throws GitCoreException {\n\n    if (presumedAncestor.equals(presumedDescendant)) {\n      return true;\n    }"
  },
  {
    "id" : "fc855c63-37c9-42fd-8b5b-64d2f19302ea",
    "prId" : 192,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/192#pullrequestreview-393566677",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "20c92f1b-e69e-4bb7-a2d3-66e82de6c91c",
        "parentId" : null,
        "authorId" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "body" : "I think it is worth to notice here that:\r\nhttps://stackoverflow.com/questions/4553624/hashmap-get-put-complexity\r\n\r\nOf course, it would a minor improvement (supposing that no one changes `Map` implementation) but instead of `containsKey` we could just compare the `get` result with `null` (and reduce the complexity twice)",
        "createdAt" : "2020-04-15T08:11:56Z",
        "updatedAt" : "2020-04-15T13:46:25Z",
        "lastEditedBy" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "tags" : [
        ]
      },
      {
        "id" : "cc6d89e7-cf43-4e74-b81c-ac074bfc2183",
        "parentId" : "20c92f1b-e69e-4bb7-a2d3-66e82de6c91c",
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Hmm the problem is that specific map is that values are `@Nullable` (to handle rare cases when merge-base can't be found for a specific pair of commits)... so `null` is a rare-yet-valid value and isn't equivalent to a missing key :/",
        "createdAt" : "2020-04-15T08:35:21Z",
        "updatedAt" : "2020-04-15T13:46:25Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "8968a50bc62f701889b85434cba204a1463cb64b",
    "line" : 82,
    "diffHunk" : "@@ -1,1 +183,187 @@    var baKey = Tuple.of(b, a);\n    if (mergeBaseCache.containsKey(abKey)) {\n      return mergeBaseCache.get(abKey);\n    } else if (mergeBaseCache.containsKey(baKey)) {\n      return mergeBaseCache.get(baKey);"
  },
  {
    "id" : "0ebc57cc-38fe-4e9b-a796-101c06989e8d",
    "prId" : 130,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/130#pullrequestreview-378021891",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d7b2d561-12cb-412e-9089-853c2f0eeb34",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "`Iterator.ofAll(sWalk).map(...)` or sth like that maybe instead?",
        "createdAt" : "2020-03-18T16:56:18Z",
        "updatedAt" : "2020-03-20T07:31:28Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      },
      {
        "id" : "8bb54c7f-3bda-49cb-a4a2-2a80a5422f4b",
        "parentId" : "d7b2d561-12cb-412e-9089-853c2f0eeb34",
        "authorId" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "body" : "Sadly it looks like someone forgot to write `implements Iterator` so the change you requested is not achievable",
        "createdAt" : "2020-03-19T19:08:28Z",
        "updatedAt" : "2020-03-20T07:31:28Z",
        "lastEditedBy" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "tags" : [
        ]
      },
      {
        "id" : "722a30f6-d939-4822-b21d-384b3fecba49",
        "parentId" : "d7b2d561-12cb-412e-9089-853c2f0eeb34",
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : ":frowning_face: ",
        "createdAt" : "2020-03-19T19:17:55Z",
        "updatedAt" : "2020-03-20T07:31:28Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "615646ae7fffae540b823dc888c37938a169cf57",
    "line" : 108,
    "diffHunk" : "@@ -1,1 +139,143 @@\n      List<IGitCoreSubmoduleEntry> submodules = List.empty();\n      while (sWalk.next()) {\n        submodules = submodules.append(new GitCoreSubmoduleEntry(sWalk.getDirectory().toPath(), sWalk.getModuleName()));\n      }"
  }
]