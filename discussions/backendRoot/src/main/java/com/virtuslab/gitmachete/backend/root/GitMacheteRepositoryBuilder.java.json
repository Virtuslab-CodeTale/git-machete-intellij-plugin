[
  {
    "id" : "70b35ae7-7568-492c-8fca-3bb10ac8966c",
    "prId" : 203,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/203#pullrequestreview-395713590",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "d338db1c-5a45-4b23-9d23-4708cd7f8bfa",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Lombok-generated code marks the param (now called `givenBranchLayout`) as `@MonotonicNonNull` as well... and one can't assign a `@MonotonicNonNull` value to another `@MonotonicNonNull` value",
        "createdAt" : "2020-04-17T19:20:04Z",
        "updatedAt" : "2020-04-21T20:49:47Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      },
      {
        "id" : "7f4b818f-8307-44ed-b2c8-863d6eab8df9",
        "parentId" : "d338db1c-5a45-4b23-9d23-4708cd7f8bfa",
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Coz `@MonotonicNonNull` is essentially:\r\n\r\n* `@Nullable` when getting\r\n* `@NonNull` when setting",
        "createdAt" : "2020-04-17T19:21:03Z",
        "updatedAt" : "2020-04-21T20:49:47Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "ff79d8b3ffb89e418e22feedea0a4d042874a9a7",
    "line" : 32,
    "diffHunk" : "@@ -1,1 +61,65 @@  }\n\n  public GitMacheteRepositoryBuilder branchLayout(IBranchLayout givenBranchLayout) {\n    this.branchLayout = givenBranchLayout;\n    return this;"
  },
  {
    "id" : "35b2b890-3513-430a-976a-bde695fceb84",
    "prId" : 178,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/178#pullrequestreview-390653713",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "43e7d379-432f-4ef7-af21-90fc1f9922c4",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Nice :tada: ",
        "createdAt" : "2020-04-09T10:04:55Z",
        "updatedAt" : "2020-04-09T19:34:10Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "0bd5c35b5d3e55e6045c1e7981c9fba082286a28",
    "line" : 167,
    "diffHunk" : "@@ -1,1 +280,284 @@\n  @RequiredArgsConstructor\n  private static class AncestorityCache {\n    private final IGitCoreRepository repository;\n    Map<Tuple2<BaseGitCoreCommit, BaseGitCoreCommit>, Boolean> cache = new HashMap<>();"
  },
  {
    "id" : "7607b700-8f73-4386-bd72-6c3ab84cf7ce",
    "prId" : 178,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/178#pullrequestreview-391015167",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "bc28609f-e1a5-46e2-9462-ca439002fb57",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Btw maybe some `DefaultMap`/`Map.withDefault`/however it's called in Java/Vavr?",
        "createdAt" : "2020-04-09T10:05:47Z",
        "updatedAt" : "2020-04-09T19:34:10Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      },
      {
        "id" : "5ba89a9a-86fd-4f92-a66a-c971c2de7daf",
        "parentId" : "bc28609f-e1a5-46e2-9462-ca439002fb57",
        "authorId" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "body" : "You mean smth that will compute the value if it is absent, right? If so it is still the case that haunts as since streams and exceptions discussion. :( \r\n\r\nOfc there are:\r\nhttps://docs.oracle.com/javase/8/docs/api/java/util/Map.html#computeIfAbsent-K-java.util.function.Function-\r\nhttps://www.javadoc.io/doc/io.vavr/vavr/0.9.0/io/vavr/collection/Map.html#computeIfAbsent-K-java.util.function.Function-\r\nbut I am afraid that they cannot be used (easily)",
        "createdAt" : "2020-04-09T16:52:03Z",
        "updatedAt" : "2020-04-09T19:34:10Z",
        "lastEditedBy" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "tags" : [
        ]
      },
      {
        "id" : "d143a242-e9ed-4c3e-9be2-f96b45c97744",
        "parentId" : "bc28609f-e1a5-46e2-9462-ca439002fb57",
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Oh ok, I forgot again :( let's leave as is then",
        "createdAt" : "2020-04-09T18:03:14Z",
        "updatedAt" : "2020-04-09T19:34:10Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "0bd5c35b5d3e55e6045c1e7981c9fba082286a28",
    "line" : 169,
    "diffHunk" : "@@ -1,1 +282,286 @@  private static class AncestorityCache {\n    private final IGitCoreRepository repository;\n    Map<Tuple2<BaseGitCoreCommit, BaseGitCoreCommit>, Boolean> cache = new HashMap<>();\n\n    boolean isAncestor(BaseGitCoreCommit presumedAncestor, BaseGitCoreCommit presumedDescendant)"
  },
  {
    "id" : "655a3c0c-2b13-4b52-88f7-194bdaa7961e",
    "prId" : 178,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/178#pullrequestreview-391094802",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0c7102c8-5918-4a89-86a8-1ae8aafea323",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Even when FP(A) is missing, when parent(A) is ancestor of A, we should fall back to the range of commits `parent(A)..A`",
        "createdAt" : "2020-04-09T18:28:12Z",
        "updatedAt" : "2020-04-09T19:34:10Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      },
      {
        "id" : "a1d3801e-c9f7-4f21-a36f-0a736a52caba",
        "parentId" : "0c7102c8-5918-4a89-86a8-1ae8aafea323",
        "authorId" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "body" : "> But what seems to be missing here is the fallback to parent(A) in case FP(A) is missing but A is descendant of parent(A)\r\n\r\nBut if the fallback to parent(A) takes place this piece of code works fine, am I right?",
        "createdAt" : "2020-04-09T19:31:22Z",
        "updatedAt" : "2020-04-09T19:34:10Z",
        "lastEditedBy" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "tags" : [
        ]
      },
      {
        "id" : "273243c8-578c-4e7f-b3d2-dd997e3d030a",
        "parentId" : "0c7102c8-5918-4a89-86a8-1ae8aafea323",
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Oh ok you're right, this should be fine now",
        "createdAt" : "2020-04-09T20:04:49Z",
        "updatedAt" : "2020-04-09T20:04:50Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "0bd5c35b5d3e55e6045c1e7981c9fba082286a28",
    "line" : 56,
    "diffHunk" : "@@ -1,1 +144,148 @@            .map(GitMacheteCommit::new)\n            .collect(List.collector())\n        : List.empty();\n\n    var pointedCommit = new GitMacheteCommit(corePointedCommit);"
  },
  {
    "id" : "64f7cbd8-16d6-4b70-9066-1a111c8225d8",
    "prId" : 177,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/177#pullrequestreview-391398119",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2900c8d-a305-4834-9fd2-085a444be45d",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Let's convert `Seq<Try<X>>` to `Try<Seq<X>>`",
        "createdAt" : "2020-04-08T14:53:28Z",
        "updatedAt" : "2020-04-10T09:07:06Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      },
      {
        "id" : "c7fd4a8f-10e2-4869-a581-5ebd979bf25d",
        "parentId" : "e2900c8d-a305-4834-9fd2-085a444be45d",
        "authorId" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "body" : "A W E S O M E",
        "createdAt" : "2020-04-10T11:33:43Z",
        "updatedAt" : "2020-04-10T11:33:44Z",
        "lastEditedBy" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "tags" : [
        ]
      }
    ],
    "commit" : "ca559b22004306dc15048c030d6a86d548b7f7fb",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +88,92 @@    var rootBranchTries = branchLayout.getRootBranches()\n        .map(entry -> Try.of(() -> createGitMacheteRootBranch(gitCoreRepository, entry)));\n    var rootBranches = Try.sequence(rootBranchTries).getOrElseThrow(GitMacheteException.class::cast);\n\n    var rootBranchByName = rootBranches.toMap(branch -> Tuple.of(branch.getName(), branch));"
  },
  {
    "id" : "ac19b579-9e9f-43bf-bc67-2bedcccdcaf0",
    "prId" : 175,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/175#pullrequestreview-389936295",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "0bc7072c-9f81-4b6f-bc70-39ff620f679c",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "A separate factory field is still necessary for the sake of testability",
        "createdAt" : "2020-04-08T12:43:09Z",
        "updatedAt" : "2020-04-10T08:51:40Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "d4ba62aad1d7468255c218cac30b6f1551186f28",
    "line" : 33,
    "diffHunk" : "@@ -1,1 +51,55 @@  private final Map<String, BaseGitMacheteBranch> branchByName = new HashMap<>();\n\n  private final IGitCoreRepositoryFactory gitCoreRepositoryFactory;\n\n  private final Path pathToRepoRoot;"
  },
  {
    "id" : "1a3d8eb0-aae7-4a3b-8178-b1780d639be4",
    "prId" : 166,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/166#pullrequestreview-388912940",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "4b41e8c0-35b7-44a8-ac04-64ed7407d1a7",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "**Major:** Yeah... that's kinda slippery... I don't think we should just basically crash the plugin just when we can't derive fork point for one specific non-root branch. Unfortunately reflogs tend to get more and more incomplete over time due to `git gc` => `git reflog expire` (see https://git-scm.com/docs/git-gc#Documentation/git-gc.txt-gcreflogExpire - 90/30 days expiry date). For us this means that in certain (still, rather rare) cases we won't be able to derive the fork point, no matter what.",
        "createdAt" : "2020-04-03T21:13:09Z",
        "updatedAt" : "2020-04-08T13:52:05Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      },
      {
        "id" : "b91ee185-359c-4926-b36c-d868d2874b28",
        "parentId" : "4b41e8c0-35b7-44a8-ac04-64ed7407d1a7",
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "So... unfortunately we have to live with the model where `GitMacheteNonRootBranch#forkPoint` is `Optional` (and I'm aware that this optionality cascades e.g. to `GitRebaseParams` :frowning_face: )",
        "createdAt" : "2020-04-03T21:15:09Z",
        "updatedAt" : "2020-04-08T13:52:05Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      },
      {
        "id" : "da6c4b34-72a9-462d-9fa6-4aaf80a5ef7a",
        "parentId" : "4b41e8c0-35b7-44a8-ac04-64ed7407d1a7",
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "In case FP(A) is not found:\r\n* if A in sync with parent(A): assume parent(A) as FP(A)\r\n* if A **not** in sync with parent(A): FP should remain null; also, assume there are no commits specific to A (empty list); assume red edge as usual when A not in sync with parent(A)",
        "createdAt" : "2020-04-06T18:55:57Z",
        "updatedAt" : "2020-04-08T13:52:05Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      },
      {
        "id" : "a60522c1-a995-417f-8a88-f831d5827799",
        "parentId" : "4b41e8c0-35b7-44a8-ac04-64ed7407d1a7",
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "This should be coordinated with the @micpiotrowski's work on #165 ",
        "createdAt" : "2020-04-06T18:56:52Z",
        "updatedAt" : "2020-04-08T13:52:05Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      },
      {
        "id" : "6543e468-ecbf-4155-ace7-9f4f7ac704aa",
        "parentId" : "4b41e8c0-35b7-44a8-ac04-64ed7407d1a7",
        "authorId" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "body" : "I will resolve it (and https://github.com/VirtusLab/git-machete-intellij-plugin/issues/165) within another PR",
        "createdAt" : "2020-04-06T21:52:20Z",
        "updatedAt" : "2020-04-08T13:52:05Z",
        "lastEditedBy" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "tags" : [
        ]
      },
      {
        "id" : "28ead457-a392-4ed7-899e-07e1a92f88a8",
        "parentId" : "4b41e8c0-35b7-44a8-ac04-64ed7407d1a7",
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Ok, reassigned #165 to you then",
        "createdAt" : "2020-04-07T08:50:53Z",
        "updatedAt" : "2020-04-08T13:52:05Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "5bab06ea356ae5e9ba3e19403c320d6f87a0a309",
    "line" : 190,
    "diffHunk" : "@@ -1,1 +134,138 @@        .getOrElseThrow(e -> new GitMacheteException(e));\n\n    if (!coreForkPoint.isPresent()) {\n      throw new GitMacheteException(String\n          .format(\"Cannot derive the fork point of non root branch \\\"%s\\\"\", entry.getName()));"
  },
  {
    "id" : "138f5199-ecdb-43ee-864b-871df04d6d28",
    "prId" : 166,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/166#pullrequestreview-389937677",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "e2b220b8-cf59-4304-910d-ec3979303ebf",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Just `var rootBranches = branchLayout.getRootBranches().map(entry -> createGitMacheteRootBranch(gitCoreRepository, entry))`?",
        "createdAt" : "2020-04-07T08:59:22Z",
        "updatedAt" : "2020-04-08T13:52:05Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      },
      {
        "id" : "f95db2c0-d421-4de8-948d-44c6459e917b",
        "parentId" : "e2b220b8-cf59-4304-910d-ec3979303ebf",
        "authorId" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "body" : "Reminder: https://stackoverflow.com/questions/27644361/how-can-i-throw-checked-exceptions-from-inside-java-8-streams\r\n\r\nAs `createGitMacheteRootBranch` may throw an exception we cannot use it in a stream easily. I could map entry to `io.vavr.Try` and then filter `isPresent()`, and eventually check if sizes of `branchLayout` and `rootBranches` are the same but IMHO I will cause with less readability and more complexity (and a loss of the actual exception!). ",
        "createdAt" : "2020-04-08T12:03:10Z",
        "updatedAt" : "2020-04-08T13:52:05Z",
        "lastEditedBy" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "tags" : [
        ]
      },
      {
        "id" : "4ae2b4b7-c690-4442-862e-a67ba7639887",
        "parentId" : "e2b220b8-cf59-4304-910d-ec3979303ebf",
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Yeah, I see the problem here... that's non-trivial b/c of checked exceptions, let's leave as is then",
        "createdAt" : "2020-04-08T12:09:06Z",
        "updatedAt" : "2020-04-08T13:52:05Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      },
      {
        "id" : "9e688b9d-8a24-42f9-952a-b5a3d36a523c",
        "parentId" : "e2b220b8-cf59-4304-910d-ec3979303ebf",
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Oh ok, I commented before seeing your comment, sorry",
        "createdAt" : "2020-04-08T12:45:01Z",
        "updatedAt" : "2020-04-08T13:52:05Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "5bab06ea356ae5e9ba3e19403c320d6f87a0a309",
    "line" : 81,
    "diffHunk" : "@@ -1,1 +93,97 @@    }\n\n    var rootBranches = List.ofAll(mutableGitMacheteRootBranchesList);\n    var rootBranchByName = rootBranches.toMap(branch -> Tuple.of(branch.getName(), branch)).toJavaMap();\n    branchByName.putAll(rootBranchByName);"
  },
  {
    "id" : "cb9568c0-31d1-4d63-a950-175291577c3a",
    "prId" : 166,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/166#pullrequestreview-389908769",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "11921fe3-8c2a-4b12-8de5-003fde9760e7",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Similar to the comment above, just `map`; maybe inline the entire method afterwards",
        "createdAt" : "2020-04-07T09:02:19Z",
        "updatedAt" : "2020-04-08T13:52:05Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      },
      {
        "id" : "eb82c079-f98e-45e2-8daa-9b8b65211b73",
        "parentId" : "11921fe3-8c2a-4b12-8de5-003fde9760e7",
        "authorId" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "body" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/166#discussion_r405471580",
        "createdAt" : "2020-04-08T12:04:10Z",
        "updatedAt" : "2020-04-08T13:52:05Z",
        "lastEditedBy" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "tags" : [
        ]
      }
    ],
    "commit" : "5bab06ea356ae5e9ba3e19403c320d6f87a0a309",
    "line" : 249,
    "diffHunk" : "@@ -1,1 +171,175 @@    branchByName.putAll(subbranchByName);\n\n    return downstreamBranches;\n  }\n"
  },
  {
    "id" : "43891f53-b4cf-4db3-a400-8ee65a918db4",
    "prId" : 157,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/157#pullrequestreview-385795982",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "37d7e1c8-7866-4c49-a1fd-e781707879cf",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Beautiful :heart: ",
        "createdAt" : "2020-04-01T17:29:23Z",
        "updatedAt" : "2020-04-01T18:17:19Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "ce14368bc03d4533e29808d1b9946d67fb071e45",
    "line" : 43,
    "diffHunk" : "@@ -1,1 +101,105 @@            .map(entry -> createMacheteBranch(entry, deriveDownstreamBranches(entry.getSubbranches()))));\n\n    var rootBranchByName = macheteRootBranches.toMap(branch -> Tuple.of(branch.getName(), branch)).toJavaMap();\n    branchByName.putAll(rootBranchByName);\n"
  },
  {
    "id" : "2d59ff1a-a60a-4652-9a7f-09e3c553468d",
    "prId" : 154,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/154#pullrequestreview-386445632",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "2a937101-d1f9-404d-be2e-5cb6387f0114",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Whoops, that was a bug xD looks that there're no other occurrences of `MessageFormat` left fortunately. Maybe forbid `MessageFormat` with Checkstyle as well (?)",
        "createdAt" : "2020-04-02T13:56:23Z",
        "updatedAt" : "2020-04-03T16:15:26Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "620435eded819585d21d3f7fcae2b787a5b43b1d",
    "line" : 26,
    "diffHunk" : "@@ -1,1 +186,190 @@      Optional<IGitCoreLocalBranch> coreBranchOptional = getCoreBranchFromName(gitCoreRepository, entry.getName());\n      if (!coreBranchOptional.isPresent()) {\n        throw new GitMacheteException(String\n            .format(\"Branch \\\"%s\\\" defined in machete file does not exist in repository\", entry.getName()));\n      } else {"
  },
  {
    "id" : "8404a2df-8339-45a4-a2ad-486d152f9dcf",
    "prId" : 147,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/147#pullrequestreview-383217446",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "ef4aa4d7-0d25-4812-892c-6fbd6fa73e61",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "An often overlooked benefit of immutable structures: **covariance** :rocket:\r\nIf `Y` extends `X`, then `immutable_collection<Y>` extends (only _logically_, coz all generics are invariant in Java anyway; one of the killer features of Scala is flexible variance on generics) `immutable_collection<X>`. We couldn't do anything like this `List.narrow(x)` if `x` was mutable (at least without risking a `RuntimeException`, likely deferred in time :/).\r\n\r\nSee http://www.deltami.edu.pl/temat/informatyka/2014/08/28/1409delta-programowanie.pdf for an approachable intro to {co,contra}variance ;)",
        "createdAt" : "2020-03-27T21:42:23Z",
        "updatedAt" : "2020-03-30T12:21:02Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      },
      {
        "id" : "fd9b0f2c-edaf-41ad-b780-281e869bbb5f",
        "parentId" : "ef4aa4d7-0d25-4812-892c-6fbd6fa73e61",
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Pics in @ up not mine btw xD",
        "createdAt" : "2020-03-27T21:44:28Z",
        "updatedAt" : "2020-03-30T12:21:02Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "7779ab3f5e5771f85ecbf4224dc3c569ed1f44aa",
    "line" : 24,
    "diffHunk" : "@@ -1,1 +97,101 @@        branchLayout.getRootBranches());\n\n    List<IGitMacheteBranch> macheteRootBranches = List.narrow(\n        branchLayout.getRootBranches()\n            .map(entry -> createMacheteBranch(entry, deriveDownstreamBranches(entry.getSubbranches())))"
  },
  {
    "id" : "58d5a678-8f38-46bb-9fa1-01c11e0a8fcf",
    "prId" : 126,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/126#pullrequestreview-374214062",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "06e60a6d-03e1-422b-b523-f3145f83eb31",
        "parentId" : null,
        "authorId" : "48423025-6a70-4a33-a28c-13ad330a38e0",
        "body" : "This is thrown when we have `machete` file without indentations (all branches are on 0 level) - exotic case in case of git machete but this can happens:\r\n`java.lang.ClassCastException: class java.lang.NullPointerException cannot be cast to class com.virtuslab.branchlayout.api.BranchLayoutException (java.lang.NullPointerException is in module java.base of loader 'bootstrap'; com.virtuslab.branchlayout.api.BranchLayoutException is in unnamed module of loader com.intellij.ide.plugins.cl.PluginClassLoader @89d15f5)\r\n\tat com.virtuslab.gitmachete.backend.root.GitMacheteRepositoryBuilder.lambda$build$1(GitMacheteRepositoryBuilder.java:77)\r\n\tat io.vavr.control.Try.getOrElseThrow(Try.java:789)\r\n\tat com.virtuslab.gitmachete.backend.root.GitMacheteRepositoryBuilder.build(GitMacheteRepositoryBuilder.java:77)\r\n\tat com.virtuslab.gitmachete.backend.root.GitMacheteRepositoryBuilder.build(GitMacheteRepositoryBuilder.java:38)\r\n\tat com.virtuslab.gitmachete.frontend.ui.GitMacheteGraphTableManager.lambda$updateRepository$807c2002$1(GitMacheteGraphTableManager.java:80)\r\n\tat io.vavr.control.Try.of(Try.java:76)\r\n\tat com.virtuslab.gitmachete.frontend.ui.GitMacheteGraphTableManager.updateRepository(GitMacheteGraphTableManager.java:80)\r\n\tat com.virtuslab.gitmachete.frontend.ui.GitMacheteGraphTableManager$1.run(GitMacheteGraphTableManager.java:89)\r\n\tat com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:888)\r\n\tat com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$2(CoreProgressManager.java:163)\r\n\tat com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:585)\r\n\tat com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:531)\r\n\tat com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:59)\r\n\tat com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:150)\r\n\tat com.intellij.openapi.progress.impl.CoreProgressManager$4.lambda$run$0(CoreProgressManager.java:402)\r\n\tat com.intellij.util.ConcurrencyUtil.runUnderThreadName(ConcurrencyUtil.java:221)\r\n\tat com.intellij.openapi.progress.impl.CoreProgressManager$4.run(CoreProgressManager.java:402)\r\n\tat com.intellij.openapi.application.impl.ApplicationImpl$1.run(ApplicationImpl.java:238)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)`",
        "createdAt" : "2020-03-12T11:23:47Z",
        "updatedAt" : "2020-03-13T16:38:14Z",
        "lastEditedBy" : "48423025-6a70-4a33-a28c-13ad330a38e0",
        "tags" : [
        ]
      },
      {
        "id" : "b137d6e2-a036-4fb8-96ba-0dc9321d0289",
        "parentId" : "06e60a6d-03e1-422b-b523-f3145f83eb31",
        "authorId" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "body" : "oh thanks! I resolved (by setting indent character to `' '` by default) this bug and added tests for an empty machete file and a machete file with root branches only ",
        "createdAt" : "2020-03-13T11:03:14Z",
        "updatedAt" : "2020-03-13T16:38:14Z",
        "lastEditedBy" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "tags" : [
        ]
      }
    ],
    "commit" : "03e5b38adf0f65ef54d961374369dff189509fc1",
    "line" : 83,
    "diffHunk" : "@@ -1,1 +73,77 @@      Path pathToBranchLayoutFile = gitCoreRepository.getGitFolderPath().resolve(\"machete\");\n      branchLayout = Try.of(() -> new BranchLayoutFileParser(pathToBranchLayoutFile).parse())\n          .getOrElseThrow(e -> new MacheteFileParseException(((BranchLayoutException) e).getErrorLine().isEmpty()\n              ? MessageFormat.format(\"Error occurred while parsing machete file: {0}\",\n                  pathToBranchLayoutFile.toString())"
  }
]