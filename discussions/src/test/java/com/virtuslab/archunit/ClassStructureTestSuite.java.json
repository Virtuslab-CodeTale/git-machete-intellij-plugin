[
  {
    "id" : "dbebeec1-9943-4a96-bc4b-c7621b4275a8",
    "prId" : 659,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/659#pullrequestreview-545704482",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "506a6f05-3ae3-450c-b553-3ef42b2ae9ce",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Basically, **subclasses** of `BaseProjectDependentAction`... I can't see any easier way to express that, only with these upper/lower bounds criteria",
        "createdAt" : "2020-12-06T13:14:48Z",
        "updatedAt" : "2020-12-07T13:06:08Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "6918f41e1dfe36e3e131e580ff9c88d3a43609e4",
    "line" : 23,
    "diffHunk" : "@@ -1,1 +29,33 @@        .areAssignableTo(com.virtuslab.gitmachete.frontend.actions.base.BaseProjectDependentAction.class)\n        .and()\n        .areNotAssignableFrom(com.virtuslab.gitmachete.frontend.actions.base.BaseProjectDependentAction.class)\n        .and(new DescribedPredicate<JavaClass>(\"override onUpdate method\") {\n          @Override"
  },
  {
    "id" : "84344220-a5fd-449e-9cc1-0ee1e0ebe747",
    "prId" : 659,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/659#pullrequestreview-545704532",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "7ad12e42-9ac5-4844-a542-839c1b66909e",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "`get(Declared)Methods`, as opposed to `getAllMethods`, which would include the inherited ones as well",
        "createdAt" : "2020-12-06T13:15:27Z",
        "updatedAt" : "2020-12-07T13:06:08Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "6918f41e1dfe36e3e131e580ff9c88d3a43609e4",
    "line" : 27,
    "diffHunk" : "@@ -1,1 +33,37 @@          @Override\n          public boolean apply(JavaClass input) {\n            return input.getMethods().stream().anyMatch(method -> method.getName().equals(\"onUpdate\"));\n          }\n        })"
  }
]