[
  {
    "id" : "ffc23361-c543-4e23-acfe-b1e6c018eae0",
    "prId" : 173,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/173#pullrequestreview-389457009",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "f982e991-55df-44d9-a6e2-eba655e0c355",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "`levelToPresentUpstream.get(level - 1)` :/ it'd be actually super-hard to statically verify that's always correct... there is a limit of what Checker can do (at least without us polluting the code with dozens of annotations) ;)",
        "createdAt" : "2020-04-07T20:16:04Z",
        "updatedAt" : "2020-04-10T08:44:22Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "918f681f6fb2d67b72fe5024b7f1cd0226f76f4d",
    "line" : 46,
    "diffHunk" : "@@ -1,1 +111,115 @@      }\n\n      @SuppressWarnings(\"index:argument.type.incompatible\")\n      Tuple2<Integer, Integer> levelAndUpstreamLineIndex = new Tuple2<>(level,\n          level <= 0 ? -1 : levelToPresentUpstream.get(level - 1));"
  },
  {
    "id" : "3247c8d1-ce14-414a-9e29-0579ed6767fd",
    "prId" : 173,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/173#pullrequestreview-389460736",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "fc809a62-2ca9-433e-b8ec-23a9096ca4ae",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Note that thanks to `Option#get` being annotated as `@Pure` (see config/checker/java.util.astub), Checker knows that each call to `firstLineWithBlankPrefixOption.get()` returns the same String reference; in particular in this case, it knows that this String is non-empty (from `!isEmpty()` check above).",
        "createdAt" : "2020-04-07T20:21:40Z",
        "updatedAt" : "2020-04-10T08:44:22Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "918f681f6fb2d67b72fe5024b7f1cd0226f76f4d",
    "line" : 16,
    "diffHunk" : "@@ -1,1 +44,48 @@    // Redundant non-emptiness check to satisfy IndexChecker\n    if (firstLineWithBlankPrefixOption.isPresent() && !firstLineWithBlankPrefixOption.get().isEmpty()) {\n      indentCharacter = firstLineWithBlankPrefixOption.get().charAt(0);\n      levelWidth = getIndentLevelWidth(firstLineWithBlankPrefixOption.get());\n    }"
  },
  {
    "id" : "86dd89b4-f4b4-43df-9cb7-33e1856e21b8",
    "prId" : 173,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/173#pullrequestreview-390843232",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "c270e0ae-e932-4afd-931e-0f5171751197",
        "parentId" : null,
        "authorId" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "body" : "s/Option/Optional",
        "createdAt" : "2020-04-09T13:46:58Z",
        "updatedAt" : "2020-04-10T08:44:22Z",
        "lastEditedBy" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "tags" : [
        ]
      },
      {
        "id" : "012b1e98-1472-4cda-8f73-ef5dbdd17458",
        "parentId" : "c270e0ae-e932-4afd-931e-0f5171751197",
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Done on a follow-up PR",
        "createdAt" : "2020-04-09T14:26:58Z",
        "updatedAt" : "2020-04-10T08:44:22Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      }
    ],
    "commit" : "918f681f6fb2d67b72fe5024b7f1cd0226f76f4d",
    "line" : 12,
    "diffHunk" : "@@ -1,1 +40,44 @@   */\n  private void deriveIndentCharacter(List<String> lines) {\n    var firstLineWithBlankPrefixOption = lines.find(line -> line.startsWith(\" \") || line.startsWith(\"\\t\"))\n        .toJavaOptional();\n    // Redundant non-emptiness check to satisfy IndexChecker"
  },
  {
    "id" : "02b1426b-2ed4-4ecd-a837-8ac59900427a",
    "prId" : 126,
    "prUrl" : "https://github.com/VirtusLab/git-machete-intellij-plugin/pull/126#pullrequestreview-374348385",
    "prSource" : "GitHub",
    "comments" : [
      {
        "id" : "8ccd729e-4a2a-4bb3-8c2c-c6e047154bf0",
        "parentId" : null,
        "authorId" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "body" : "Btw pls add a regression test against the bug that happened when all lines had indent=0 (the one spotted by @micpiotrowski)",
        "createdAt" : "2020-03-13T13:18:24Z",
        "updatedAt" : "2020-03-13T16:38:14Z",
        "lastEditedBy" : "1cbc94b1-89bf-4adc-8c1f-ad39035845fa",
        "tags" : [
        ]
      },
      {
        "id" : "dd7f5d23-4297-4b3b-b046-e017618bfe9c",
        "parentId" : "8ccd729e-4a2a-4bb3-8c2c-c6e047154bf0",
        "authorId" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "body" : "its already done, na",
        "createdAt" : "2020-03-13T14:33:44Z",
        "updatedAt" : "2020-03-13T16:38:14Z",
        "lastEditedBy" : "d8774f13-a544-44d7-9cf3-69a9d1083f1f",
        "tags" : [
        ]
      }
    ],
    "commit" : "03e5b38adf0f65ef54d961374369dff189509fc1",
    "line" : 134,
    "diffHunk" : "@@ -1,1 +132,136 @@\n  private int getIndentLevel(int indent, int lineNumber) throws BranchLayoutException {\n    if (indent == 0) {\n      return 0;\n    }"
  }
]